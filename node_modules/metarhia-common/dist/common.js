'use strict';

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var submodules = ['array', // Arrays manipulations
'auth', // Validation of data for authentication/authorization
'btree', // B-Tree for indexes in DB
'cache', // Cache (enhanced Map)
'callbacks', // Callback utilities
'data', // Data structures manipulations
'enum', // Enumerated type
'events', // Events and emitter
'flags', // Flags data type
'fp', // Functional programming
'id', // Keys and identifiers
'iterator', // Iterator
'math', // Math common function
'mp', // Metaprogramming
'network', // Network utilities
'oop', // Object-oriented programming
'sort', // Sort compare functions
'strings', // Strings utilities
'time', // Date and Time functions
'uint64', // Uint64
'units', // Units conversion
'utilities'].map(function (path) {
  return require('./lib/' + path);
});
module.exports = Object.assign.apply(Object, [{}].concat(_toConsumableArray(submodules)));