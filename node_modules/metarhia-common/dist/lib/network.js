'use strict';

var os = require('os');

var _require = require('./utilities'),
    alias = _require.alias; // Convert IP string to number
//   ip - <string>, IP address, default: '127.0.0.1'
// Returns: <number>


var ipToInt = function ipToInt() {
  var ip = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '127.0.0.1';
  return ip.split('.').reduce(function (res, item) {
    return (res << 8) + +item;
  }, 0);
};

var LOCAL_IPS_CACHE; // Get local network interfaces
// Returns: <string[]>

var localIPs = function localIPs() {
  if (LOCAL_IPS_CACHE) return LOCAL_IPS_CACHE;
  var ips = [];
  var ifHash = os.networkInterfaces();

  for (var ifName in ifHash) {
    var ifItem = ifHash[ifName];

    for (var i = 0; i < ifItem.length; i++) {
      var protocol = ifItem[i];

      if (protocol.family === 'IPv4') {
        ips.push(protocol.address);
      }
    }
  }

  LOCAL_IPS_CACHE = ips;
  return ips;
}; // Parse host string
//   host - <string>, host or empty string, may contain `:port`
// Returns: <string>, host without port but not empty


var parseHost = function parseHost(host) {
  if (!host) {
    return 'no-host-name-in-http-headers';
  }

  var portOffset = host.indexOf(':');
  if (portOffset > -1) host = host.substr(0, portOffset);
  return host;
};

module.exports = {
  ip2int: alias(ipToInt),
  ipToInt: ipToInt,
  localIPs: localIPs,
  parseHost: parseHost
};